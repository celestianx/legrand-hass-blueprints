blueprint:
  name: Switch Legrand (067773)
  description: Turn on/Dim a light when Legrand switch is pressed.
  domain: automation
  source_url: https://github.com/home-assistant/core/blob/dev/homeassistant/components/automation/blueprints/motion_light.yaml
  input:
    switch:
      name: Switch
      selector:
        device:
          manufacturer: "Legrand"
          model: "Wireless remote switch (067773)"
    target:
      name: Light
      description: Entity to interact with when left button is pressed.
      selector:
        entity:
          domain: 
            - light
            - switch
    brightness_step:
      name: Brightness Step
      description: Increment/decrement step for light dimming.
      default: 70
      selector:
        number:
          min: 0
          max: 255
          unit_of_measurement: ""
    transition_step:
      name: Transition Step
      description: Time duration for light to transition to transition to incremented/decremented brightness.
      default:
        hours: 0
        minutes: 0
        seconds: 1
      selector:
        duration:

# If motion is detected within the delay,
# we restart the script.
mode: restart
max_exceeded: silent

variables:
  switch: !input switch
  switch_name: "{{ device_attr(switch, 'name') }}"
  target: !input target
  brightness_step: !input brightness_step
  transition_step: !input transition_step

trigger:
  - platform: mqtt
    topic: zigbee2mqtt/+/action
condition:
  - condition: template
    value_template: "{{ switch_name == (trigger.topic | regex_findall_index('(?<=/).*(?=/)')) }}"
action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ 'toggle' == trigger.payload }}"
        sequence:
          - service: light.toggle
            data: {}
            target:
              entity_id: !input target
      - conditions:
          - condition: template
            value_template: "{{ 'brightness_move' in trigger.payload }}"
        sequence:
          - repeat:
              until:
                - condition: template
                  value_template: "{{ 'brightness_stop' in trigger.payload }}"
              sequence:
                - service: light.turn_on
                  data:
                    transition: "{{ transition_step.seconds }}"
                    brightness: >
                      {% if '_move_up' in trigger.payload %}
                          {{ min(255, state_attr(target, 'brightness') + brightness_step) }}
                      {% elif '_move_down' in trigger.payload %}
                        {{ max(1, state_attr(target, 'brightness') - brightness_step) }}
                      {% endif %}
                  target:
                    entity_id: !input target
                - delay:
                    hours: 0
                    minutes: 0
                    seconds: "{{ transition_step.seconds }}"
                    milliseconds: 0